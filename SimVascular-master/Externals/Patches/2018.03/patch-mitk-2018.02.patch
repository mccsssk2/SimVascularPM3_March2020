diff -rupN original/CMakeLists.txt patch/CMakeLists.txt
--- original/CMakeLists.txt	2018-02-27 21:04:17.000000000 -0800
+++ patch/CMakeLists.txt	2018-03-02 19:07:56.000000000 -0800
@@ -286,10 +286,10 @@ elseif(MITK_USE_Python)
     message("> Forcing MITK_USE_Numpy to ON because of MITK_USE_Python")
     set(MITK_USE_Numpy ON CACHE BOOL "Use Numpy" FORCE)
   endif()
-  if(NOT MITK_USE_SimpleITK)
-    message("> Forcing MITK_USE_SimpleITK to ON because of MITK_USE_Python")
-    set(MITK_USE_SimpleITK ON CACHE BOOL "Use SimpleITK" FORCE)
-  endif()
+  #if(NOT MITK_USE_SimpleITK)
+  #  message("> Forcing MITK_USE_SimpleITK to ON because of MITK_USE_Python")
+  #  set(MITK_USE_SimpleITK ON CACHE BOOL "Use SimpleITK" FORCE)
+  #endif()

   option(MITK_USE_SYSTEM_PYTHON "Use the system python runtime" OFF)
   if(MITK_USE_SYSTEM_PYTHON)
diff -rupN original/CMake/FindNumpy.cmake patch/CMake/FindNumpy.cmake
--- original/CMake/FindNumpy.cmake	2018-03-03 08:36:22.000000000 -0800
+++ patch/CMake/FindNumpy.cmake	2018-03-03 14:20:33.000000000 -0800
@@ -15,7 +15,7 @@ if(UNIX)
 endif()

 execute_process (
-  COMMAND ${_python} -c "import os; os.environ['DISTUTILS_USE_SDK']='1'; import numpy.distutils; print numpy.distutils.misc_util.get_numpy_include_dirs()[0]"
+  COMMAND ${_python} -c "import os; os.environ['DISTUTILS_USE_SDK']='1'; import numpy.distutils; print(numpy.distutils.misc_util.get_numpy_include_dirs()[0])"
   OUTPUT_VARIABLE output
   OUTPUT_STRIP_TRAILING_WHITESPACE
   )
diff -rupN original/CMake/PackageDepends/MITK_VTK_Config.cmake patch/CMake/PackageDepends/MITK_VTK_Config.cmake
--- original/CMake/PackageDepends/MITK_VTK_Config.cmake	2018-03-03 08:36:22.000000000 -0800
+++ patch/CMake/PackageDepends/MITK_VTK_Config.cmake	2018-03-03 14:20:33.000000000 -0800
@@ -1,4 +1,5 @@
-find_package(VTK COMPONENTS ${VTK_REQUIRED_COMPONENTS_BY_MODULE} REQUIRED)
+#find_package(VTK COMPONENTS ${VTK_REQUIRED_COMPONENTS_BY_MODULE} REQUIRED)
+find_package(VTK REQUIRED)
 if(VTK_FOUND AND NOT VTK_BUILD_SHARED_LIBS)
   message(FATAL_ERROR "MITK only supports a VTK which was built with shared libraries. Turn on BUILD_SHARED_LIBS in your VTK config.")
 endif()
diff -rupN original/CMakeExternals/CTK.cmake patch/CMakeExternals/CTK.cmake
--- original/CMakeExternals/CTK.cmake	2018-03-03 08:36:22.000000000 -0800
+++ patch/CMakeExternals/CTK.cmake	2018-03-03 14:20:33.000000000 -0800
@@ -59,8 +59,8 @@ if(MITK_USE_CTK)

     ExternalProject_Add(${proj}
       LIST_SEPARATOR ${sep}
-      URL ${MITK_THIRDPARTY_DOWNLOAD_PREFIX_URL}/CTK_${revision_tag}.tar.gz
-      URL_MD5 e7997d53c556f45b6eadb7bdf1645280
+      GIT_REPOSITORY "https://github.com/commontk/CTK"
+      GIT_TAG "59ad0ef7e7abba886816ceb1bbbc0e7e803e5a1b"
       # PATCH_COMMAND ${PATCH_COMMAND} -N -p1 -i ${CMAKE_CURRENT_LIST_DIR}/CTK.patch
       UPDATE_COMMAND ""
       INSTALL_COMMAND ""
diff -rupN original/CMakeExternals/ExternalProjectList.cmake patch/CMakeExternals/ExternalProjectList.cmake
--- original/CMakeExternals/ExternalProjectList.cmake	2018-03-03 08:36:22.000000000 -0800
+++ patch/CMakeExternals/ExternalProjectList.cmake	2018-03-03 14:20:33.000000000 -0800
@@ -28,7 +28,7 @@ mitkFunctionAddExternalProject(NAME Open
 mitkFunctionAddExternalProject(NAME Vigra     OFF          DEPENDS HDF5)

 # These are "hard" dependencies and always set to ON
-mitkFunctionAddExternalProject(NAME ITK       ON           NO_CACHE DEPENDS HDF5)
+mitkFunctionAddExternalProject(NAME ITK       ON           NO_CACHE)# DEPENDS HDF5)
 mitkFunctionAddExternalProject(NAME VTK       ON           NO_CACHE)
 mitkFunctionAddExternalProject(NAME Boost     ON           NO_CACHE)

diff -rupN original/CMakeExternals/ITK.cmake patch/CMakeExternals/ITK.cmake
--- original/CMakeExternals/ITK.cmake	2018-03-03 08:36:22.000000000 -0800
+++ patch/CMakeExternals/ITK.cmake	2018-03-03 14:20:33.000000000 -0800
@@ -14,9 +14,9 @@ if(MITK_USE_OpenCV)
   list(APPEND proj_DEPENDENCIES OpenCV)
 endif()

-if(MITK_USE_HDF5)
-  list(APPEND proj_DEPENDENCIES HDF5)
-endif()
+#if(MITK_USE_HDF5)
+#  list(APPEND proj_DEPENDENCIES HDF5)
+#endif()

 set(ITK_DEPENDS ${proj})

@@ -67,8 +67,8 @@ if(NOT DEFINED ITK_DIR)
        -DBUILD_EXAMPLES:BOOL=OFF
        -DITK_USE_SYSTEM_GDCM:BOOL=ON
        -DGDCM_DIR:PATH=${GDCM_DIR}
-       -DITK_USE_SYSTEM_HDF5:BOOL=ON
-       -DHDF5_DIR:PATH=${HDF5_DIR}
+       #-DITK_USE_SYSTEM_HDF5:BOOL=ON
+       #-DHDF5_DIR:PATH=${HDF5_DIR}
      CMAKE_CACHE_ARGS
        ${ep_common_cache_args}
      CMAKE_CACHE_DEFAULT_ARGS
diff -rupN original/Modules/PhotoacousticsAlgorithms/include/mitkPhotoacousticBeamformingSettings.h patch/Modules/PhotoacousticsAlgorithms/include/mitkPhotoacousticBeamformingSettings.h
--- original/Modules/PhotoacousticsAlgorithms/include/mitkPhotoacousticBeamformingSettings.h	2018-03-03 08:36:23.000000000 -0800
+++ patch/Modules/PhotoacousticsAlgorithms/include/mitkPhotoacousticBeamformingSettings.h	2018-03-03 14:20:35.000000000 -0800
@@ -120,18 +120,18 @@ namespace mitk {
     */
     static bool SettingsChangedOpenCL(const BeamformingSettings& lhs, const BeamformingSettings& rhs)
     {
-      return !((abs(lhs.Angle - rhs.Angle) < 0.01f) && // 0.01 degree error margin
+      return !((fabs(lhs.Angle - rhs.Angle) < 0.01f) && // 0.01 degree error margin
         (lhs.Apod == rhs.Apod) &&
         (lhs.DelayCalculationMethod == rhs.DelayCalculationMethod) &&
         (lhs.isPhotoacousticImage == rhs.isPhotoacousticImage) &&
-        (abs(lhs.Pitch - rhs.Pitch) < 0.000001f) && // 0.0001 mm error margin
+        (fabs(lhs.Pitch - rhs.Pitch) < 0.000001f) && // 0.0001 mm error margin
         (lhs.ReconstructionLines == rhs.ReconstructionLines) &&
-        (abs(lhs.RecordTime - rhs.RecordTime) < 0.00000001f) && // 10 ns error margin
+        (fabs(lhs.RecordTime - rhs.RecordTime) < 0.00000001f) && // 10 ns error margin
         (lhs.SamplesPerLine == rhs.SamplesPerLine) &&
-        (abs(lhs.SpeedOfSound - rhs.SpeedOfSound) < 0.01f) &&
-        (abs(lhs.TimeSpacing - rhs.TimeSpacing) < 0.00000000001f) && //0.01 ns error margin
+        (fabs(lhs.SpeedOfSound - rhs.SpeedOfSound) < 0.01f) &&
+        (fabs(lhs.TimeSpacing - rhs.TimeSpacing) < 0.00000000001f) && //0.01 ns error margin
         (lhs.TransducerElements == rhs.TransducerElements));
     }
   };
 }
-#endif
\ No newline at end of file
+#endif
diff -rupN original/Modules/PhotoacousticsAlgorithms/source/OpenCLFilter/mitkPhotoacousticBModeFilter.cpp patch/Modules/PhotoacousticsAlgorithms/source/OpenCLFilter/mitkPhotoacousticBModeFilter.cpp
--- original/Modules/PhotoacousticsAlgorithms/source/OpenCLFilter/mitkPhotoacousticBModeFilter.cpp	2018-03-03 08:36:23.000000000 -0800
+++ patch/Modules/PhotoacousticsAlgorithms/source/OpenCLFilter/mitkPhotoacousticBModeFilter.cpp	2018-03-03 14:20:35.000000000 -0800
@@ -205,17 +205,17 @@ void mitk::PhotoacousticBModeFilter::Gen
   if(!m_UseLogFilter)
     for (unsigned int i = 0; i < size; ++i)
     {
-      OutputData[i] = abs(InputData[i]);
+      OutputData[i] = fabs(InputData[i]);
     }
   else
   {
     for (unsigned int i = 0; i < size; ++i)
     {
-      OutputData[i] = log(abs(InputData[i]));
+      OutputData[i] = log(fabs(InputData[i]));
     }
   }

   output->SetImportVolume(OutputData, 0, 0, mitk::Image::ImportMemoryManagementType::ManageMemory);

   m_TimeOfHeaderInitialization.Modified();
-}
\ No newline at end of file
+}
diff -rupN original/Modules/Python/autoload/PythonService/mitkPythonService.cpp patch/Modules/Python/autoload/PythonService/mitkPythonService.cpp
--- original/Modules/Python/autoload/PythonService/mitkPythonService.cpp	2018-04-18 08:14:00.000000000 -0700
+++ patch/Modules/Python/autoload/PythonService/mitkPythonService.cpp	2018-04-18 08:18:04.000000000 -0700
@@ -61,9 +61,9 @@ mitk::PythonService::PythonService()
       //TODO a better way to do this
 #ifndef WIN32
 #if defined (__APPLE__) || defined(MACOSX)
-      const char* library = "libpython2.7.dylib";
+      const char* library = "libpython3.5m.dylib";
 #else
-      const char* library = "libpython2.7.so";
+      const char* library = "libpython3.5m.so";
 #endif
       dlerror();
       if(dlopen(library, RTLD_NOW | RTLD_GLOBAL) == 0 )
@@ -85,8 +85,8 @@ mitk::PythonService::PythonService()
         pythonCommand.append( QString("sys.path.append('')\n") );
         pythonCommand.append( QString("sys.path.append('%1')\n").arg(programPath.c_str()) );
         pythonCommand.append( QString("sys.path.append('%1/Python')").arg(programPath.c_str()) );
-        //pythonCommand.append( QString("\nsite.addsitedir('%1/Python/python2.7/site-packages')").arg(programPath.c_str()) );
-        //pythonCommand.append( QString("\nsite.addsitedir('%1/Python/python2.7/dist-packages')").arg(programPath.c_str()) );
+        //pythonCommand.append( QString("\nsite.addsitedir('%1/Python/python3.5/site-packages')").arg(programPath.c_str()) );
+        //pythonCommand.append( QString("\nsite.addsitedir('%1/Python/python3.5/dist-packages')").arg(programPath.c_str()) );
         // development
       } else {
         pythonCommand.append( QString("import site, sys\n") );
@@ -202,7 +202,7 @@ std::vector<mitk::PythonVariable> mitk::
   PyObject* object = PyDict_GetItemString(dict, "__main__");
   PyObject* dirMain = PyObject_Dir(object);
   PyObject* tempObject = 0;
-  PyObject* strTempObject = 0;
+  //PyObject* strTempObject = 0;

   if(dirMain)
   {
@@ -215,15 +215,15 @@ std::vector<mitk::PythonVariable> mitk::
       tempObject = PyObject_GetAttrString( object, name.c_str() );
       attrType = tempObject->ob_type->tp_name;

-      strTempObject = PyObject_Repr(tempObject);
-      if(strTempObject && ( PyUnicode_Check(strTempObject) || PyString_Check(strTempObject) ) )
-        attrValue = PyString_AsString(strTempObject);
-      else
-        attrValue = "";
+      //strTempObject = PyObject_Repr(tempObject);
+      //if(strTempObject && ( PyUnicode_Check(strTempObject) || PyString_Check(strTempObject) ) )
+      //  attrValue = PyString_AsString(strTempObject);
+      //else
+      //  attrValue = "";

       mitk::PythonVariable var;
       var.m_Name = name;
-      var.m_Value = attrValue;
+      //var.m_Value = attrValue;
       var.m_Type = attrType;
       list.push_back(var);
     }
diff -rupN original/Modules/Core/include/mitkExtractSliceFilter.h patch/Modules/Core/include/mitkExtractSliceFilter.h
--- original/Modules/Core/include/mitkExtractSliceFilter.h	2018-02-26 17:02:30.000000000 -0800
+++ patch/Modules/Core/include/mitkExtractSliceFilter.h	2018-04-18 09:42:39.000000000 -0700
@@ -95,6 +95,9 @@ namespace mitk
     {
       this->m_InPlaneResampleExtentByGeometry = inPlaneResampleExtentByGeometry;
     }
+    void SetInPlaneResampleSizeByGeometry(bool inPlaneResampleSizeByGeometry){ this->m_InPlaneResampleSizeByGeometry = inPlaneResampleSizeByGeometry; }
+
+    void SetInPlaneResampleExtentByMinimumSpacing(bool inPlaneResampleExtentByMinimumSpacing){this->m_InPlaneResampleExtentByMinimumSpacing = inPlaneResampleExtentByMinimumSpacing;}
 
     /** \brief Sets the output dimension of the slice*/
     void SetOutputDimensionality(unsigned int dimension) { this->m_OutputDimension = dimension; }
@@ -189,6 +192,10 @@ namespace mitk
 
     bool m_InPlaneResampleExtentByGeometry; // Resampling grid corresponds to:  false->image    true->worldgeometry
 
+    bool m_InPlaneResampleSizeByGeometry;//Use Renderer Plane extents
+
+    bool m_InPlaneResampleExtentByMinimumSpacing;
+
     mitk::ScalarType *m_OutPutSpacing;
 
     bool m_VtkOutputRequested;
diff -rupN original/Modules/Core/src/Algorithms/mitkExtractSliceFilter.cpp patch/Modules/Core/src/Algorithms/mitkExtractSliceFilter.cpp
--- original/Modules/Core/src/Algorithms/mitkExtractSliceFilter.cpp	2018-02-26 17:02:30.000000000 -0800
+++ patch/Modules/Core/src/Algorithms/mitkExtractSliceFilter.cpp	2018-04-18 09:46:44.000000000 -0700
@@ -41,6 +41,8 @@ mitk::ExtractSliceFilter::ExtractSliceFi
   m_InterpolationMode = ExtractSliceFilter::RESLICE_NEAREST;
   m_ResliceTransform = nullptr;
   m_InPlaneResampleExtentByGeometry = false;
+  m_InPlaneResampleSizeByGeometry = false;
+  m_InPlaneResampleExtentByMinimumSpacing = false;
   m_OutPutSpacing = new mitk::ScalarType[2];
   m_OutputDimension = 2;
   m_ZSpacing = 1.0;
@@ -194,8 +196,15 @@ void mitk::ExtractSliceFilter::GenerateD
         // Resampling grid corresponds to the current world geometry. This
         // means that the spacing of the output 2D image depends on the
         // currently selected world geometry, and *not* on the image itself.
-        extent[0] = m_WorldGeometry->GetExtent(0);
-        extent[1] = m_WorldGeometry->GetExtent(1);
+        extent[0] = planeGeometry->GetExtent( 0 );
+        extent[1] = planeGeometry->GetExtent( 1 );
+      }
+      else if(m_InPlaneResampleExtentByMinimumSpacing)
+      {
+    	    const mitk::Vector3D &imageSpacing = inputTimeGeometry->GetGeometryForTimeStep(0)->GetSpacing();
+            double minSpacing=std::min(imageSpacing[0],std::min(imageSpacing[1],imageSpacing[2]));
+            extent[0]=planeGeometry->GetExtentInMM( 0 )/minSpacing;
+            extent[1]=planeGeometry->GetExtentInMM( 1 )/minSpacing;
       }
       else
       {
@@ -316,25 +325,28 @@ void mitk::ExtractSliceFilter::GenerateD
   int xMin, xMax, yMin, yMax;
 
   xMin = yMin = 0;
-  xMax = static_cast<int>(extent[0]);
-  yMax = static_cast<int>(extent[1]);
+  xMax = static_cast< int >( std::round(extent[0]));
+  yMax = static_cast< int >( std::round(extent[1]));
 
-  if (m_WorldGeometry->GetReferenceGeometry())
+  if(!m_InPlaneResampleSizeByGeometry)
   {
     double sliceBounds[6];
-    for (auto &sliceBound : sliceBounds)
+    if (m_WorldGeometry->GetReferenceGeometry())
     {
-      sliceBound = 0.0;
-    }
+      for (auto &sliceBound : sliceBounds)
+      {
+        sliceBound = 0.0;
+      }
 
-    if (this->GetClippedPlaneBounds(m_WorldGeometry->GetReferenceGeometry(), planeGeometry, sliceBounds))
-    {
-      // Calculate output extent (integer values)
-      xMin = static_cast<int>(sliceBounds[0] / m_OutPutSpacing[0] + 0.5);
-      xMax = static_cast<int>(sliceBounds[1] / m_OutPutSpacing[0] + 0.5);
-      yMin = static_cast<int>(sliceBounds[2] / m_OutPutSpacing[1] + 0.5);
-      yMax = static_cast<int>(sliceBounds[3] / m_OutPutSpacing[1] + 0.5);
-    } // ELSE we use the default values
+      if (this->GetClippedPlaneBounds(m_WorldGeometry->GetReferenceGeometry(), planeGeometry, sliceBounds))
+      {
+        // Calculate output extent (integer values)
+        xMin = static_cast<int>(sliceBounds[0] / m_OutPutSpacing[0] + 0.5);
+        xMax = static_cast<int>(sliceBounds[1] / m_OutPutSpacing[0] + 0.5);
+        yMin = static_cast<int>(sliceBounds[2] / m_OutPutSpacing[1] + 0.5);
+        yMax = static_cast<int>(sliceBounds[3] / m_OutPutSpacing[1] + 0.5);
+      } // ELSE we use the default values
+    }
   }
 
   // Set the output extents! First included pixel index and last included pixel index
diff -rupN original/Modules/Core/src/DataManagement/mitkSlicedGeometry3D.cpp patch/Modules/Core/src/DataManagement/mitkSlicedGeometry3D.cpp
--- original/Modules/Core/src/DataManagement/mitkSlicedGeometry3D.cpp	2018-02-26 17:02:31.000000000 -0800
+++ patch/Modules/Core/src/DataManagement/mitkSlicedGeometry3D.cpp	2018-04-18 09:48:19.000000000 -0700
@@ -65,7 +65,7 @@ mitk::SlicedGeometry3D::SlicedGeometry3D
       }
       else
       {
-        PlaneGeometry *geometry2D = other.m_PlaneGeometries[s]->Clone();
+        PlaneGeometry::Pointer geometry2D = other.m_PlaneGeometries[s]->Clone();
         assert(geometry2D != nullptr);
         SetPlaneGeometry(geometry2D, s);
       }
diff -rupN original/Modules/Core/src/Rendering/mitkImageVtkMapper2D.cpp patch/Modules/Core/src/Rendering/mitkImageVtkMapper2D.cpp
--- original/Modules/Core/src/Rendering/mitkImageVtkMapper2D.cpp	2018-02-26 17:02:31.000000000 -0800
+++ patch/Modules/Core/src/Rendering/mitkImageVtkMapper2D.cpp	2018-04-18 09:54:14.000000000 -0700
@@ -54,6 +54,8 @@ See LICENSE.txt or http://www.mitk.org f
 #include <vtkPolyDataMapper.h>
 #include <vtkProperty.h>
 #include <vtkTransform.h>
+#include <vtkImageGradientMagnitude.h>
+#include <vtkImageHistogramStatistics.h>
 
 // ITK
 #include <itkRGBAPixel.h>
@@ -164,6 +166,14 @@ void mitk::ImageVtkMapper2D::GenerateDat
   datanode->GetBoolProperty("in plane resample extent by geometry", inPlaneResampleExtentByGeometry, renderer);
   localStorage->m_Reslicer->SetInPlaneResampleExtentByGeometry(inPlaneResampleExtentByGeometry);
 
+  bool inPlaneResampleSizeByGeometry = false;
+  datanode->GetBoolProperty("in plane resample size by geometry", inPlaneResampleSizeByGeometry, renderer);
+  localStorage->m_Reslicer->SetInPlaneResampleSizeByGeometry(inPlaneResampleSizeByGeometry);
+
+  bool inPlaneResampleExtentByMinimumSpacing = false;
+  datanode->GetBoolProperty("in plane resample extent by minimum spacing", inPlaneResampleExtentByMinimumSpacing, renderer);
+  localStorage->m_Reslicer->SetInPlaneResampleExtentByMinimumSpacing(inPlaneResampleExtentByMinimumSpacing);
+
   // Initialize the interpolation mode for resampling; switch to nearest
   // neighbor if the input image is too small.
   if ((image->GetDimension() >= 3) && (image->GetDimension(2) > 1))
@@ -285,6 +295,60 @@ void mitk::ImageVtkMapper2D::GenerateDat
     localStorage->m_ReslicedImage = localStorage->m_Reslicer->GetVtkOutput();
   }
 
+  bool showGradient= false;
+  datanode->GetBoolProperty("show gradient", showGradient, renderer);
+  if (showGradient)
+  {
+	  vtkSmartPointer<vtkImageGradientMagnitude> gradientFilter = vtkSmartPointer<vtkImageGradientMagnitude>::New();
+      gradientFilter->HandleBoundariesOn();
+      gradientFilter->SetInputData(localStorage->m_ReslicedImage);
+      gradientFilter->Update();
+
+      // "background" pixels produce very large gradients at border
+      int extent[6];
+      gradientFilter->GetOutput()->GetExtent(extent);
+
+      for (int y = extent[2]; y <=extent[3] ; ++y)
+      {
+          for (int x = extent[0]; x <= extent[1]; ++x)
+          {
+              if (fabs(localStorage->m_ReslicedImage->GetScalarComponentAsDouble(x, y, 0, 0) - (-32768.0)) < 1e-3)
+              {
+            	  gradientFilter->GetOutput()->SetScalarComponentFromDouble(x, y, 0, 0, 0);
+              }
+
+              int offsets[][2] = { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 } };
+
+              for (size_t i = 0; i < sizeof(offsets) / sizeof(offsets[0]); ++i) {
+                  int xoff = x + offsets[i][0];
+                  int yoff = y + offsets[i][1];
+
+                  if (xoff < extent[0] || xoff > extent[1] || yoff < extent[2] || yoff > extent[3]) {
+                      continue;
+                  }
+
+                  if (fabs(localStorage->m_ReslicedImage->GetScalarComponentAsDouble(xoff, yoff, 0, 0) - (-32768.0)) < 1e-3)
+                  {
+                	  gradientFilter->GetOutput()->SetScalarComponentFromDouble(x, y, 0, 0, 0);
+                      break;
+                  }
+              }
+          }
+      }
+
+      localStorage->m_ReslicedImage = gradientFilter->GetOutput();
+
+      vtkSmartPointer<vtkImageHistogramStatistics> stats = vtkSmartPointer<vtkImageHistogramStatistics>::New();
+      stats->SetInputData(localStorage->m_ReslicedImage);
+      stats->GenerateHistogramImageOff();
+      stats->Update();
+
+      mitk::LevelWindow levelWindow;
+      levelWindow.SetRangeMinMax(stats->GetAutoRange()[0], stats->GetAutoRange()[1]);
+      levelWindow.SetWindowBounds(stats->GetAutoRange()[0], stats->GetAutoRange()[1]);
+      datanode->SetLevelWindow(levelWindow, renderer, "gradientlevelwindow");
+  }
+
   // Bounds information for reslicing (only reuqired if reference geometry
   // is present)
   // this used for generating a vtkPLaneSource with the right size
@@ -293,7 +357,20 @@ void mitk::ImageVtkMapper2D::GenerateDat
   {
     sliceBound = 0.0;
   }
-  localStorage->m_Reslicer->GetClippedPlaneBounds(sliceBounds);
+
+  if(inPlaneResampleSizeByGeometry)
+  {
+      double widthInMM = planeGeometry->GetExtentInMM( 0 );
+      double heightInMM = planeGeometry->GetExtentInMM( 1 );
+      sliceBounds[0] = 0.0;
+      sliceBounds[1] = widthInMM;
+      sliceBounds[2] = 0.0;
+      sliceBounds[3] = heightInMM;
+  }
+  else
+  {
+    localStorage->m_Reslicer->GetClippedPlaneBounds(sliceBounds);
+  }
 
   // get the spacing of the slice
   localStorage->m_mmPerPixel = localStorage->m_Reslicer->GetOutputSpacing();
@@ -305,16 +382,29 @@ void mitk::ImageVtkMapper2D::GenerateDat
     {
       textureClippingBound = 0.0;
     }
-    // Calculate the actual bounds of the transformed plane clipped by the
-    // dataset bounding box; this is required for drawing the texture at the
-    // correct position during 3D mapping.
-    mitk::PlaneClipping::CalculateClippedPlaneBounds(image->GetGeometry(), planeGeometry, textureClippingBounds);
-
-    textureClippingBounds[0] = static_cast<int>(textureClippingBounds[0] / localStorage->m_mmPerPixel[0] + 0.5);
-    textureClippingBounds[1] = static_cast<int>(textureClippingBounds[1] / localStorage->m_mmPerPixel[0] + 0.5);
-    textureClippingBounds[2] = static_cast<int>(textureClippingBounds[2] / localStorage->m_mmPerPixel[1] + 0.5);
-    textureClippingBounds[3] = static_cast<int>(textureClippingBounds[3] / localStorage->m_mmPerPixel[1] + 0.5);
 
+    if(inPlaneResampleSizeByGeometry)
+    {
+        double widthInMM = planeGeometry->GetExtentInMM( 0 );
+        double heightInMM = planeGeometry->GetExtentInMM( 1 );
+
+        textureClippingBounds[0] = 0.0;
+        textureClippingBounds[1] = widthInMM / localStorage->m_mmPerPixel[0];
+        textureClippingBounds[2] = 0.0;
+        textureClippingBounds[3] = heightInMM / localStorage->m_mmPerPixel[1];
+    }
+    else
+    {
+        // Calculate the actual bounds of the transformed plane clipped by the
+        // dataset bounding box; this is required for drawing the texture at the
+        // correct position during 3D mapping.
+        mitk::PlaneClipping::CalculateClippedPlaneBounds( image->GetGeometry(), planeGeometry, textureClippingBounds );
+
+        textureClippingBounds[0] = static_cast< int >( textureClippingBounds[0] / localStorage->m_mmPerPixel[0] + 0.5 );
+        textureClippingBounds[1] = static_cast< int >( textureClippingBounds[1] / localStorage->m_mmPerPixel[0] + 0.5 );
+        textureClippingBounds[2] = static_cast< int >( textureClippingBounds[2] / localStorage->m_mmPerPixel[1] + 0.5 );
+        textureClippingBounds[3] = static_cast< int >( textureClippingBounds[3] / localStorage->m_mmPerPixel[1] + 0.5 );
+    }
     // clipping bounds for cutting the image
     localStorage->m_LevelWindowFilter->SetClippingBounds(textureClippingBounds);
   }
@@ -447,7 +537,10 @@ void mitk::ImageVtkMapper2D::ApplyLevelW
   LocalStorage *localStorage = this->GetLocalStorage(renderer);
 
   LevelWindow levelWindow;
-  this->GetDataNode()->GetLevelWindow(levelWindow, renderer, "levelwindow");
+//  this->GetDataNode()->GetLevelWindow(levelWindow, renderer, "levelwindow");
+  bool showGradient = false;
+  this->GetDataNode()->GetBoolProperty("show gradient", showGradient, renderer);
+  this->GetDataNode()->GetLevelWindow( levelWindow, renderer, showGradient? "gradientlevelwindow" : "levelwindow" );
   localStorage->m_LevelWindowFilter->GetLookupTable()->SetRange(levelWindow.GetLowerWindowBound(),
                                                                 levelWindow.GetUpperWindowBound());
 
@@ -604,8 +697,7 @@ void mitk::ImageVtkMapper2D::ApplyLookup
   vtkLookupTable *usedLookupTable = localStorage->m_ColorLookupTable;
 
   // If lookup table or transferfunction use is requested...
-  mitk::LookupTableProperty::Pointer lookupTableProp =
-    dynamic_cast<mitk::LookupTableProperty *>(this->GetDataNode()->GetProperty("LookupTable"));
+  mitk::LookupTableProperty::Pointer lookupTableProp = dynamic_cast<mitk::LookupTableProperty*>(this->GetDataNode()->GetProperty("LookupTable", renderer));
 
   if (lookupTableProp.IsNotNull()) // is a lookuptable set?
   {
@@ -708,6 +800,8 @@ void mitk::ImageVtkMapper2D::SetDefaultP
     node->AddProperty("reslice interpolation", mitk::VtkResliceInterpolationProperty::New());
   node->AddProperty("texture interpolation", mitk::BoolProperty::New(false));
   node->AddProperty("in plane resample extent by geometry", mitk::BoolProperty::New(false));
+  node->AddProperty( "in plane resample size by geometry", mitk::BoolProperty::New( false ) );
+  node->AddProperty( "in plane resample extent by minimum spacing", mitk::BoolProperty::New( false ) );
   node->AddProperty("bounding box", mitk::BoolProperty::New(false));
 
   mitk::RenderingModeProperty::Pointer renderingModeProperty = mitk::RenderingModeProperty::New();
diff -rupN original/Modules/Core/src/Rendering/mitkPlaneGeometryDataVtkMapper3D.cpp patch/Modules/Core/src/Rendering/mitkPlaneGeometryDataVtkMapper3D.cpp
--- original/Modules/Core/src/Rendering/mitkPlaneGeometryDataVtkMapper3D.cpp	2018-02-26 17:02:31.000000000 -0800
+++ patch/Modules/Core/src/Rendering/mitkPlaneGeometryDataVtkMapper3D.cpp	2018-04-18 09:54:58.000000000 -0700
@@ -302,6 +302,13 @@ namespace mitk
         tubeRadius = sqrt(m_SurfaceCreator->GetBoundingBox()->GetDiagonalLength2()) / 450.0;
       }
 
+      bool useGeometryBoundingBox = false;
+      if(GetDataNode()->GetBoolProperty("in plane resample size by geometry", useGeometryBoundingBox, renderer))
+      {
+          if(useGeometryBoundingBox)
+        	  m_SurfaceCreator->SetUseBoundingBox(false);
+      }
+
       // Calculate the surface of the PlaneGeometry
       m_SurfaceCreator->Update();
       Surface *surface = m_SurfaceCreator->GetOutput();
diff -rupN original/Modules/CppMicroServices/core/src/util/usThreads_p.h patch/Modules/CppMicroServices/core/src/util/usThreads_p.h
--- original/Modules/CppMicroServices/core/src/util/usThreads_p.h	2018-02-26 17:02:31.000000000 -0800
+++ patch/Modules/CppMicroServices/core/src/util/usThreads_p.h	2018-04-18 09:56:33.000000000 -0700
@@ -59,6 +59,13 @@
     #endif
     #include <windows.h>
 
+    // 2016-12-09 - problems with maro replacement on msvc 2013
+    #ifdef UNICODE
+    #define CreateMutex  CreateMutexW
+    #else
+    #define CreateMutex  CreateMutexA
+    #endif // !UNICODE
+
     #define US_THREADS_MUTEX(x)           HANDLE (x);
     #define US_THREADS_MUTEX_INIT(x)
     #define US_THREADS_MUTEX_CTOR(x)      : x(::CreateMutex(nullptr, FALSE, nullptr))
diff -rupN original/Modules/QtWidgets/src/QmitkStdMultiWidget.cpp patch/Modules/QtWidgets/src/QmitkStdMultiWidget.cpp
--- original/Modules/QtWidgets/src/QmitkStdMultiWidget.cpp	2018-02-26 17:02:33.000000000 -0800
+++ patch/Modules/QtWidgets/src/QmitkStdMultiWidget.cpp	2018-04-18 11:48:30.000000000 -0700
@@ -456,10 +456,13 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
 
   // Set Layout to widget
   this->setLayout(QmitkStdMultiWidgetLayout);
 
+  QSplitter* previousMainSplit=m_MainSplit;
+
   // create main splitter
   m_MainSplit = new QSplitter(this);
   QmitkStdMultiWidgetLayout->addWidget(m_MainSplit);
@@ -479,6 +482,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   m_SubSplit1->addWidget(mitkWidget1Container);
   m_SubSplit1->addWidget(mitkWidget2Container);
   m_SubSplit1->addWidget(mitkWidget3Container);
+  mitkWidget1->SetWindowMenuEventAble(true);
+  mitkWidget2->SetWindowMenuEventAble(true);
+  mitkWidget3->SetWindowMenuEventAble(true);
 
   // set SplitterSize for splitter top
   QList<int> splitterSize;
@@ -489,6 +495,7 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // insert Widget Container into splitter bottom
   m_SubSplit2->addWidget(mitkWidget4Container);
+  mitkWidget4->SetWindowMenuEventAble(true);
 
   // set SplitterSize for splitter m_LayoutSplit
   splitterSize.clear();
@@ -518,6 +525,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_2D_IMAGES_UP);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_2D_IMAGES_UP);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -533,6 +543,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -553,6 +569,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   m_SubSplit1->addWidget(mitkWidget1Container);
   m_SubSplit1->addWidget(mitkWidget2Container);
   m_SubSplit1->addWidget(mitkWidget3Container);
+  mitkWidget1->SetWindowMenuEventAble(true);
+  mitkWidget2->SetWindowMenuEventAble(true);
+  mitkWidget3->SetWindowMenuEventAble(true);
 
   // set splitterSize of SubSplit1
   QList<int> splitterSize;
@@ -562,6 +581,7 @@ void QmitkStdMultiWidget::changeLayoutTo
   m_SubSplit1->setSizes(splitterSize);
 
   m_SubSplit2->addWidget(mitkWidget4Container);
+  mitkWidget4->SetWindowMenuEventAble(true);
 
   // set splitterSize of Layout Split
   splitterSize.clear();
@@ -591,6 +611,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_2D_IMAGES_LEFT);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_2D_IMAGES_LEFT);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -664,6 +687,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -687,6 +716,11 @@ void QmitkStdMultiWidget::changeLayoutTo
   m_SubSplit2->addWidget(mitkWidget3Container);
   m_SubSplit2->addWidget(mitkWidget4Container);
 
+  mitkWidget1->SetWindowMenuEventAble(true);
+  mitkWidget2->SetWindowMenuEventAble(true);
+  mitkWidget3->SetWindowMenuEventAble(true);
+  mitkWidget4->SetWindowMenuEventAble(true);
+
   // set splitter Size
   QList<int> splitterSize;
   splitterSize.push_back(1000);
@@ -716,6 +750,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_DEFAULT);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_DEFAULT);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -731,6 +768,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -738,6 +781,20 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // add widget Splitter to main Splitter
   m_MainSplit->addWidget(mitkWidget4Container);
+  mitkWidget4->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget1Container);
+  layoutTemp->addWidget(mitkWidget2Container);
+  layoutTemp->addWidget(mitkWidget3Container);
+  mitkWidget1->SetWindowMenuEventAble(false);
+  mitkWidget2->SetWindowMenuEventAble(false);
+  mitkWidget3->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // add LevelWindow Widget to mainSplitter
   m_MainSplit->addWidget(levelWindowWidget);
@@ -760,6 +817,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_BIG_3D);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_BIG_3D);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
   mitk::RenderingManager::GetInstance()->SetRenderWindowFocus(mitkWidget4->GetVtkRenderWindow());
@@ -776,6 +836,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -783,6 +849,20 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // add widget Splitter to main Splitter
   m_MainSplit->addWidget(mitkWidget1Container);
+  mitkWidget1->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget2Container);
+  layoutTemp->addWidget(mitkWidget3Container);
+  layoutTemp->addWidget(mitkWidget4Container);
+  mitkWidget2->SetWindowMenuEventAble(false);
+  mitkWidget3->SetWindowMenuEventAble(false);
+  mitkWidget4->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // add LevelWindow Widget to mainSplitter
   m_MainSplit->addWidget(levelWindowWidget);
@@ -805,6 +885,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_WIDGET1);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_WIDGET1);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 
@@ -822,6 +905,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -829,6 +918,20 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // add widget Splitter to main Splitter
   m_MainSplit->addWidget(mitkWidget2Container);
+  mitkWidget2->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget1Container);
+  layoutTemp->addWidget(mitkWidget3Container);
+  layoutTemp->addWidget(mitkWidget4Container);
+  mitkWidget1->SetWindowMenuEventAble(false);
+  mitkWidget3->SetWindowMenuEventAble(false);
+  mitkWidget4->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // add LevelWindow Widget to mainSplitter
   m_MainSplit->addWidget(levelWindowWidget);
@@ -851,6 +954,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_WIDGET2);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_WIDGET2);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
   mitk::RenderingManager::GetInstance()->SetRenderWindowFocus(mitkWidget2->GetVtkRenderWindow());
@@ -867,6 +973,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -874,6 +986,20 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // add widget Splitter to main Splitter
   m_MainSplit->addWidget(mitkWidget3Container);
+  mitkWidget3->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget1Container);
+  layoutTemp->addWidget(mitkWidget2Container);
+  layoutTemp->addWidget(mitkWidget4Container);
+  mitkWidget1->SetWindowMenuEventAble(false);
+  mitkWidget2->SetWindowMenuEventAble(false);
+  mitkWidget4->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // add LevelWindow Widget to mainSplitter
   m_MainSplit->addWidget(levelWindowWidget);
@@ -896,6 +1022,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_WIDGET3);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_WIDGET3);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
   mitk::RenderingManager::GetInstance()->SetRenderWindowFocus(mitkWidget3->GetVtkRenderWindow());
@@ -912,6 +1041,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -927,6 +1062,19 @@ void QmitkStdMultiWidget::changeLayoutTo
   // add Widgets to splitter
   m_LayoutSplit->addWidget(mitkWidget3Container);
   m_LayoutSplit->addWidget(mitkWidget4Container);
+  mitkWidget3->SetWindowMenuEventAble(true);
+  mitkWidget4->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget1Container);
+  layoutTemp->addWidget(mitkWidget2Container);
+  mitkWidget1->SetWindowMenuEventAble(false);
+  mitkWidget2->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // set Splitter Size
   QList<int> splitterSize;
@@ -953,6 +1101,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_ROW_WIDGET_3_AND_4);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_ROW_WIDGET_3_AND_4);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -968,6 +1119,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -983,6 +1140,19 @@ void QmitkStdMultiWidget::changeLayoutTo
   // add Widgets to splitter
   m_LayoutSplit->addWidget(mitkWidget3Container);
   m_LayoutSplit->addWidget(mitkWidget4Container);
+  mitkWidget3->SetWindowMenuEventAble(true);
+  mitkWidget4->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget1Container);
+  layoutTemp->addWidget(mitkWidget2Container);
+  mitkWidget1->SetWindowMenuEventAble(false);
+  mitkWidget2->SetWindowMenuEventAble(false);
+ widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // set SplitterSize
   QList<int> splitterSize;
@@ -1009,6 +1179,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_COLUMN_WIDGET_3_AND_4);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_COLUMN_WIDGET_3_AND_4);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -1033,6 +1206,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -1054,6 +1233,18 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   m_SubSplit2->addWidget(mitkWidget3Container);
   m_SubSplit2->addWidget(mitkWidget4Container);
+  mitkWidget2->SetWindowMenuEventAble(true);
+  mitkWidget3->SetWindowMenuEventAble(true);
+  mitkWidget4->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget1Container);
+  mitkWidget1->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // set Splitter Size
   QList<int> splitterSize;
@@ -1085,6 +1276,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_SMALL_UPPER_WIDGET2_BIG3_AND4);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_SMALL_UPPER_WIDGET2_BIG3_AND4);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -1100,6 +1294,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -1120,6 +1320,18 @@ void QmitkStdMultiWidget::changeLayoutTo
   m_SubSplit1->addWidget(mitkWidget1Container);
   m_SubSplit1->addWidget(mitkWidget2Container);
   m_SubSplit2->addWidget(mitkWidget4Container);
+  mitkWidget1->SetWindowMenuEventAble(true);
+  mitkWidget2->SetWindowMenuEventAble(true);
+  mitkWidget4->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget3Container);
+  mitkWidget3->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // set Splitter Size
   QList<int> splitterSize;
@@ -1148,6 +1360,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_2X_2D_AND_3D_WIDGET);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_2X_2D_AND_3D_WIDGET);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -1163,6 +1378,12 @@ void QmitkStdMultiWidget::changeLayoutTo
 
   // create Main Layout
   QmitkStdMultiWidgetLayout = new QHBoxLayout(this);
+  QmitkStdMultiWidgetLayout->setContentsMargins(0,0,0,0);
+
+  //Set Layout to widget
+  this->setLayout(QmitkStdMultiWidgetLayout);
+
+  QSplitter* previousMainSplit=m_MainSplit;
 
   // create main splitter
   m_MainSplit = new QSplitter(this);
@@ -1183,6 +1404,18 @@ void QmitkStdMultiWidget::changeLayoutTo
   m_SubSplit1->addWidget(mitkWidget1Container);
   m_SubSplit1->addWidget(mitkWidget4Container);
   m_SubSplit2->addWidget(mitkWidget2Container);
+  mitkWidget1->SetWindowMenuEventAble(true);
+  mitkWidget4->SetWindowMenuEventAble(true);
+  mitkWidget2->SetWindowMenuEventAble(true);
+
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget3Container);
+  mitkWidget3->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
 
   // set Splitter Size
   QList<int> splitterSize;
@@ -1211,6 +1444,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_2D_AND_3D_LEFT_2D_RIGHT_WIDGET);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_2D_AND_3D_LEFT_2D_RIGHT_WIDGET);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update Alle Widgets
   this->UpdateAllWidgets();
 }
@@ -1235,6 +1471,8 @@ void QmitkStdMultiWidget::changeLayoutTo
   // Set Layout to widget
   this->setLayout(QmitkStdMultiWidgetLayout);
 
+  QSplitter* previousMainSplit=m_MainSplit;
+
   // create main splitter
   m_MainSplit = new QSplitter(this);
   QmitkStdMultiWidgetLayout->addWidget(m_MainSplit);
@@ -1255,12 +1491,15 @@ void QmitkStdMultiWidget::changeLayoutTo
   {
   case 1:
     m_SubSplit1->addWidget(mitkWidget1Container);
+    mitkWidget1->SetWindowMenuEventAble(true);
     break;
   case 2:
     m_SubSplit1->addWidget(mitkWidget2Container);
+    mitkWidget2->SetWindowMenuEventAble(true);
     break;
   case 3:
     m_SubSplit1->addWidget(mitkWidget3Container);
+    mitkWidget3->SetWindowMenuEventAble(true);
     break;
   }
 
@@ -1268,12 +1509,24 @@ void QmitkStdMultiWidget::changeLayoutTo
   QList<int> splitterSize;
   // insert Widget Container into splitter bottom
   m_SubSplit2->addWidget(mitkWidget4Container);
+  mitkWidget4->SetWindowMenuEventAble(true);
   // set SplitterSize for splitter m_LayoutSplit
   splitterSize.clear();
   splitterSize.push_back(700);
   splitterSize.push_back(700);
   m_LayoutSplit->setSizes(splitterSize);
 
+  QWidget* widgetTemp=new QWidget(this);
+  QHBoxLayout* layoutTemp= new QHBoxLayout(widgetTemp);
+  layoutTemp->setContentsMargins(0,0,0,0);
+  widgetTemp->setLayout(layoutTemp);
+  layoutTemp->addWidget(mitkWidget2Container);
+  layoutTemp->addWidget(mitkWidget3Container);
+  mitkWidget2->SetWindowMenuEventAble(false);
+  mitkWidget3->SetWindowMenuEventAble(false);
+  widgetTemp->hide();
+  QmitkStdMultiWidgetLayout->addWidget(widgetTemp);
+
   // show mainSplitt
   m_MainSplit->show();
 
@@ -1312,6 +1565,9 @@ void QmitkStdMultiWidget::changeLayoutTo
   mitkWidget3->LayoutDesignListChanged(LAYOUT_2D_UP_AND_3D_DOWN);
   mitkWidget4->LayoutDesignListChanged(LAYOUT_2D_UP_AND_3D_DOWN);
 
+  if(previousMainSplit)
+    delete previousMainSplit;
+
   // update all Widgets
   this->UpdateAllWidgets();
 }
diff -rupN original/Plugins/PluginList.cmake patch/Plugins/PluginList.cmake
--- original/Plugins/PluginList.cmake	2018-06-07 08:36:08.000000000 -0700
+++ patch/Plugins/PluginList.cmake	2018-06-07 08:39:43.000000000 -0700
@@ -35,8 +35,8 @@ set(MITK_PLUGINS
   org.mitk.gui.qt.datamanager:ON
   org.mitk.gui.qt.datamanagerlight:OFF
   org.mitk.gui.qt.properties:ON
-  org.mitk.gui.qt.basicimageprocessing:OFF
-  org.mitk.gui.qt.dicom:OFF
+  org.mitk.gui.qt.basicimageprocessing:ON
+  org.mitk.gui.qt.dicom:ON
   org.mitk.gui.qt.dicominspector:OFF
   org.mitk.gui.qt.diffusionimaging:OFF
   org.mitk.gui.qt.diffusionimaging.connectomics:OFF
@@ -53,22 +53,22 @@ set(MITK_PLUGINS
   org.mitk.gui.qt.diffusionimaging.tractography:OFF
   org.mitk.gui.qt.diffusionimaging.python:OFF
   org.mitk.gui.qt.dosevisualization:OFF
-  org.mitk.gui.qt.geometrytools:OFF
+  org.mitk.gui.qt.geometrytools:ON
   org.mitk.gui.qt.igtexamples:OFF
   org.mitk.gui.qt.igttracking:OFF
   org.mitk.gui.qt.lasercontrol:OFF
   org.mitk.gui.qt.openigtlink:OFF
-  org.mitk.gui.qt.imagecropper:OFF
+  org.mitk.gui.qt.imagecropper:ON
   org.mitk.gui.qt.imagenavigator:ON
   org.mitk.gui.qt.viewnavigator:OFF
   org.mitk.gui.qt.materialeditor:OFF
-  org.mitk.gui.qt.measurementtoolbox:OFF
+  org.mitk.gui.qt.measurementtoolbox:ON
   org.mitk.gui.qt.moviemaker:OFF
-  org.mitk.gui.qt.pointsetinteraction:OFF
+  org.mitk.gui.qt.pointsetinteraction:ON
   org.mitk.gui.qt.pointsetinteractionmultispectrum:OFF
-  org.mitk.gui.qt.python:OFF
+  org.mitk.gui.qt.python:ON
   org.mitk.gui.qt.remeshing:OFF
-  org.mitk.gui.qt.segmentation:OFF
+  org.mitk.gui.qt.segmentation:ON
   org.mitk.gui.qt.aicpregistration:OFF
   org.mitk.gui.qt.renderwindowmanager:OFF
   org.mitk.gui.qt.toftutorial:OFF
@@ -79,7 +79,7 @@ set(MITK_PLUGINS
   org.mitk.gui.qt.photoacoustics.imageprocessing:OFF
   org.mitk.gui.qt.photoacoustics.simulation:OFF
   org.mitk.gui.qt.ultrasound:OFF
-  org.mitk.gui.qt.volumevisualization:OFF
+  org.mitk.gui.qt.volumevisualization:ON
   org.mitk.gui.qt.eventrecorder:OFF
   org.mitk.gui.qt.xnat:OFF
   org.mitk.gui.qt.igt.app.echotrack:OFF
diff -rupN original/Modules/QtWidgets/include/QmitkRenderWindow.h patch/Modules/QtWidgets/include/QmitkRenderWindow.h
--- original/Modules/QtWidgets/include/QmitkRenderWindow.h	2018-06-06 08:12:08.000000000 -0700
+++ patch/Modules/QtWidgets/include/QmitkRenderWindow.h	2018-06-06 10:02:24.000000000 -0700
@@ -88,6 +88,9 @@ public:
   vtkRenderWindowInteractor *GetVtkRenderWindowInteractor() override { return nullptr; }
   void FullScreenMode(bool state);
 
+  void SetWindowMenuEventAble(bool able);
+
+
 protected:
   // overloaded move handler
   void moveEvent(QMoveEvent *event) override;
diff -rupN original/Modules/QtWidgets/include/QmitkRenderWindowMenu.h patch/Modules/QtWidgets/include/QmitkRenderWindowMenu.h
--- original/Modules/QtWidgets/include/QmitkRenderWindowMenu.h	2018-06-06 08:12:08.000000000 -0700
+++ patch/Modules/QtWidgets/include/QmitkRenderWindowMenu.h	2018-06-06 10:01:16.000000000 -0700
@@ -95,6 +95,10 @@ is activated.*/
 
   void NotifyNewWidgetPlanesMode(int mode);
 
+  void SetEventAble( bool able)
+  { m_EventAble=able; }
+
+
 protected:
   /*! Create menu widget. The menu contains five QPushButtons (hori-split, verti-split, full-screen, settings and close
   button)
@@ -322,6 +326,8 @@ protected:
 
   bool m_Entered;
 
+  bool m_EventAble;
+
 private:
   mitk::BaseRenderer::Pointer m_Renderer;
 
diff -rupN original/Modules/QtWidgets/src/QmitkRenderWindow.cpp patch/Modules/QtWidgets/src/QmitkRenderWindow.cpp
--- original/Modules/QtWidgets/src/QmitkRenderWindow.cpp	2018-06-06 08:12:08.000000000 -0700
+++ patch/Modules/QtWidgets/src/QmitkRenderWindow.cpp	2018-06-06 10:03:54.000000000 -0700
@@ -63,6 +63,11 @@ QmitkRenderWindow::~QmitkRenderWindow()
   Destroy(); // Destroy mitkRenderWindowBase
 }
 
+void QmitkRenderWindow::SetWindowMenuEventAble(bool able)
+{
+  m_MenuWidget->SetEventAble(able);
+}
+
 void QmitkRenderWindow::SetResendQtEvents(bool resend)
 {
   m_ResendQtEvents = resend;
diff -rupN original/Modules/QtWidgets/src/QmitkRenderWindowMenu.cpp patch/Modules/QtWidgets/src/QmitkRenderWindowMenu.cpp
--- original/Modules/QtWidgets/src/QmitkRenderWindowMenu.cpp	2018-06-06 08:12:08.000000000 -0700
+++ patch/Modules/QtWidgets/src/QmitkRenderWindowMenu.cpp	2018-06-06 10:40:09.000000000 -0700
@@ -67,6 +67,7 @@ QmitkRenderWindowMenu::QmitkRenderWindow
     m_OldLayoutDesign(0),
     m_FullScreenMode(false),
     m_Entered(false),
+    m_EventAble(true),
     m_Renderer(b),
     m_MultiWidget(mw),
     m_Parent(parent)
@@ -261,10 +262,13 @@ void QmitkRenderWindowMenu::ShowMenu()
 
 void QmitkRenderWindowMenu::enterEvent(QEvent * /*e*/)
 {
-  MITK_DEBUG << "menu enterEvent";
-  DeferredShowMenu();
+  if(m_EventAble)
+  {
+    MITK_DEBUG << "menu enterEvent";
+    DeferredShowMenu();
 
-  m_Entered = true;
+    m_Entered=true;
+  }
 }
 
 void QmitkRenderWindowMenu::DeferredHideMenu()
@@ -356,7 +360,7 @@ void QmitkRenderWindowMenu::OnFullScreen
     this->ChangeFullScreenIcon();
   }
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 
 /// \brief
@@ -379,7 +383,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_2DIMAGEUP;
   emit SignalChangeLayoutDesign(LAYOUT_2DIMAGEUP);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutTo2DImagesLeft(bool)
 {
@@ -390,7 +394,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_2DIMAGELEFT;
   emit SignalChangeLayoutDesign(LAYOUT_2DIMAGELEFT);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutToDefault(bool)
 {
@@ -401,7 +405,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_DEFAULT;
   emit SignalChangeLayoutDesign(LAYOUT_DEFAULT);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 
 void QmitkRenderWindowMenu::DeferredShowMenu()
@@ -432,7 +436,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_BIG3D;
   emit SignalChangeLayoutDesign(LAYOUT_BIG3D);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 
 void QmitkRenderWindowMenu::OnChangeLayoutToWidget1(bool)
@@ -444,7 +448,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_AXIAL;
   emit SignalChangeLayoutDesign(LAYOUT_AXIAL);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutToWidget2(bool)
 {
@@ -455,7 +459,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_SAGITTAL;
   emit SignalChangeLayoutDesign(LAYOUT_SAGITTAL);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutToWidget3(bool)
 {
@@ -466,7 +470,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_CORONAL;
   emit SignalChangeLayoutDesign(LAYOUT_CORONAL);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutToRowWidget3And4(bool)
 {
@@ -477,7 +481,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_ROWWIDGET3AND4;
   emit SignalChangeLayoutDesign(LAYOUT_ROWWIDGET3AND4);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutToColumnWidget3And4(bool)
 {
@@ -488,7 +492,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_COLUMNWIDGET3AND4;
   emit SignalChangeLayoutDesign(LAYOUT_COLUMNWIDGET3AND4);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 
 void QmitkRenderWindowMenu::OnChangeLayoutToSmallUpperWidget2Big3and4(bool)
@@ -500,7 +504,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_SMALLUPPERWIDGET2BIGAND4;
   emit SignalChangeLayoutDesign(LAYOUT_SMALLUPPERWIDGET2BIGAND4);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutTo2x2Dand3DWidget(bool)
 {
@@ -511,7 +515,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_2X2DAND3DWIDGET;
   emit SignalChangeLayoutDesign(LAYOUT_2X2DAND3DWIDGET);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 void QmitkRenderWindowMenu::OnChangeLayoutToLeft2Dand3DRight2D(bool)
 {
@@ -522,7 +526,7 @@ void QmitkRenderWindowMenu::OnChangeLayo
   m_LayoutDesign = LAYOUT_LEFT2DAND3DRIGHT2D;
   emit SignalChangeLayoutDesign(LAYOUT_LEFT2DAND3DRIGHT2D);
 
-  DeferredShowMenu();
+  DeferredHideMenu();
 }
 
 void QmitkRenderWindowMenu::UpdateLayoutDesignList(int layoutDesignIndex)
diff -rupN original/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/QmitkStdMultiWidgetEditor.cpp patch/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/QmitkStdMultiWidgetEditor.cpp
--- original/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/QmitkStdMultiWidgetEditor.cpp	2018-02-26 16:59:22.000000000 -0800
+++ patch/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/QmitkStdMultiWidgetEditor.cpp	2018-04-18 12:00:01.000000000 -0700
@@ -439,6 +439,16 @@ void QmitkStdMultiWidgetEditor::OnPrefer
   bool newMode = prefs->GetBool("PACS like mouse interaction", false);
   d->m_MouseModeToolbar->setVisible( newMode );
   d->m_StdMultiWidget->GetMouseModeSwitcher()->SetInteractionScheme( newMode ? mitk::MouseModeSwitcher::PACS : mitk::MouseModeSwitcher::MITK );
+
+  bool showLogo = prefs->GetBool("Show Department Logo", false);
+  if(showLogo)
+  {
+    d->m_StdMultiWidget->EnableDepartmentLogo();
+  }
+  else
+  {
+    d->m_StdMultiWidget->DisableDepartmentLogo();
+  }
 }
 
 mitk::Color QmitkStdMultiWidgetEditor::HexColorToMitkColor(const QString& widgetColorInHex)
diff -rupN original/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.cpp patch/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.cpp
--- original/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.cpp	2018-02-26 16:59:22.000000000 -0800
+++ patch/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.cpp	2018-04-18 11:50:02.000000000 -0700
@@ -109,6 +109,7 @@ bool QmitkStdMultiWidgetEditorPreference
   m_Preferences->PutBool("Show level/window widget", m_Ui->m_ShowLevelWindowWidget->isChecked());
   m_Preferences->PutBool("PACS like mouse interaction", m_Ui->m_PACSLikeMouseMode->isChecked());
   m_Preferences->PutInt("Rendering Mode", m_Ui->m_RenderingMode->currentIndex());
+  m_Preferences->PutBool("Show Department Logo", m_Ui->m_ShowDepartmentLogo->isChecked());
 
   return true;
 }
@@ -158,6 +159,7 @@ void QmitkStdMultiWidgetEditorPreference
   m_Ui->m_PACSLikeMouseMode->setChecked(m_Preferences->GetBool("PACS like mouse interaction", false));
   int mode= m_Preferences->GetInt("Rendering Mode",0);
   m_Ui->m_RenderingMode->setCurrentIndex(mode);
+  m_Ui->m_ShowDepartmentLogo->setChecked(m_Preferences->GetBool("Show Department Logo", false));
   m_Ui->m_CrosshairGapSize->setValue(m_Preferences->GetInt("crosshair gap size", 32));
 }
 
diff -rupN original/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.ui patch/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.ui
--- original/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.ui	2018-02-26 16:59:22.000000000 -0800
+++ patch/Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/src/internal/QmitkStdMultiWidgetEditorPreferencePage.ui	2018-04-18 11:58:32.000000000 -0700
@@ -7,14 +7,43 @@
     <x>0</x>
     <y>0</y>
     <width>518</width>
-    <height>431</height>
+    <height>419</height>
    </rect>
   </property>
   <property name="windowTitle">
    <string>External Programs</string>
   </property>
   <layout class="QGridLayout" name="gridLayout">
-   <item row="10" column="1">
+   <property name="verticalSpacing">
+    <number>6</number>
+   </property>
+   <item row="2" column="0" colspan="3">
+    <widget class="QCheckBox" name="m_PACSLikeMouseMode">
+     <property name="layoutDirection">
+      <enum>Qt::LeftToRight</enum>
+     </property>
+     <property name="text">
+      <string>Use PACS like mouse interaction (select left mouse button action)</string>
+     </property>
+     <property name="tristate">
+      <bool>false</bool>
+     </property>
+    </widget>
+   </item>
+   <item row="1" column="0" colspan="3">
+    <widget class="QCheckBox" name="m_ShowLevelWindowWidget">
+     <property name="layoutDirection">
+      <enum>Qt::LeftToRight</enum>
+     </property>
+     <property name="text">
+      <string>Show level/window widget</string>
+     </property>
+     <property name="checked">
+      <bool>true</bool>
+     </property>
+    </widget>
+   </item>
+   <item row="11" column="1">
     <widget class="QComboBox" name="m_RenderWindowChooser">
      <item>
       <property name="text">
@@ -48,33 +77,14 @@
      </property>
     </widget>
    </item>
-   <item row="15" column="0">
-    <widget class="QPushButton" name="m_ResetButton">
+   <item row="12" column="1">
+    <widget class="QPushButton" name="m_ColorButton1">
      <property name="text">
-      <string>Reset preferences</string>
+      <string/>
      </property>
     </widget>
    </item>
-   <item row="6" column="1" colspan="2">
-    <widget class="QComboBox" name="m_RenderingMode">
-     <item>
-      <property name="text">
-       <string>Standard Rendering</string>
-      </property>
-     </item>
-     <item>
-      <property name="text">
-       <string>Enable Multisampling (Antialiasing)</string>
-      </property>
-     </item>
-     <item>
-      <property name="text">
-       <string>Enable Depth Peeling</string>
-      </property>
-     </item>
-    </widget>
-   </item>
-   <item row="7" column="0" colspan="3">
+   <item row="8" column="0" colspan="3">
     <widget class="QLabel" name="label">
      <property name="text">
       <string>* Changes require restart of MITK.
@@ -84,51 +94,27 @@
      </property>
     </widget>
    </item>
-   <item row="9" column="1">
-    <widget class="QSpinBox" name="m_CrosshairGapSize">
-     <property name="value">
-      <number>32</number>
-     </property>
-    </widget>
-   </item>
-   <item row="8" column="0" colspan="3">
-    <widget class="Line" name="line_3">
-     <property name="orientation">
-      <enum>Qt::Horizontal</enum>
-     </property>
-    </widget>
+   <item row="15" column="1" colspan="2">
+    <widget class="QLineEdit" name="m_RenderWindowDecorationText"/>
    </item>
    <item row="14" column="0">
-    <widget class="QLabel" name="label_8">
-     <property name="toolTip">
-      <string>The small text on the button left of each renderwindow.</string>
-     </property>
-     <property name="text">
-      <string>Corner annotation</string>
-     </property>
-    </widget>
-   </item>
-   <item row="9" column="0">
-    <widget class="QLabel" name="label_9">
+    <widget class="QLabel" name="label_7">
      <property name="toolTip">
-      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The gap in the middle of the crosshair in pixels.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The color is used for the following decorations (of each renderwindow):&lt;/p&gt;&lt;p&gt;Rectangle border&lt;/p&gt;&lt;p&gt;Corner annotation&lt;/p&gt;&lt;p&gt;Crosshair&lt;/p&gt;&lt;p&gt;Plane geometry helper objects (3D Planes)&lt;/p&gt;&lt;p&gt;Image navigator borders&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="text">
-      <string>Crosshair gap size</string>
+      <string>Decoration color</string>
      </property>
     </widget>
    </item>
-   <item row="13" column="0">
-    <widget class="QLabel" name="label_7">
-     <property name="toolTip">
-      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The color is used for the following decorations (of each renderwindow):&lt;/p&gt;&lt;p&gt;Rectangle border&lt;/p&gt;&lt;p&gt;Corner annotation&lt;/p&gt;&lt;p&gt;Crosshair&lt;/p&gt;&lt;p&gt;Plane geometry helper objects (3D Planes)&lt;/p&gt;&lt;p&gt;Image navigator borders&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
-     </property>
+   <item row="7" column="0">
+    <widget class="QLabel" name="label_5">
      <property name="text">
-      <string>Decoration color</string>
+      <string>Rendering Mode*</string>
      </property>
     </widget>
    </item>
-   <item row="13" column="1">
+   <item row="14" column="1">
     <widget class="QPushButton" name="m_RenderWindowDecorationColor">
      <property name="text">
       <string/>
@@ -136,67 +122,77 @@
     </widget>
    </item>
    <item row="10" column="0">
-    <widget class="QLabel" name="label_6">
+    <widget class="QLabel" name="label_9">
      <property name="toolTip">
-      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Choose the renderwindow from the multi widget.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The gap in the middle of the crosshair in pixels.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="text">
-      <string>Render windows</string>
+      <string>Crosshair gap size</string>
      </property>
     </widget>
    </item>
-   <item row="1" column="0" colspan="3">
-    <widget class="QCheckBox" name="m_ShowLevelWindowWidget">
-     <property name="layoutDirection">
-      <enum>Qt::LeftToRight</enum>
+   <item row="9" column="0" colspan="3">
+    <widget class="Line" name="line_3">
+     <property name="orientation">
+      <enum>Qt::Horizontal</enum>
      </property>
-     <property name="text">
-      <string>Show level/window widget</string>
+    </widget>
+   </item>
+   <item row="12" column="0">
+    <widget class="QLabel" name="label_2">
+     <property name="toolTip">
+      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If two colors are set, a gradient background is generated.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
-     <property name="checked">
-      <bool>true</bool>
+     <property name="text">
+      <string>Background color</string>
      </property>
     </widget>
    </item>
-   <item row="2" column="0" colspan="3">
-    <widget class="QCheckBox" name="m_PACSLikeMouseMode">
-     <property name="layoutDirection">
-      <enum>Qt::LeftToRight</enum>
+   <item row="7" column="1" colspan="2">
+    <widget class="QComboBox" name="m_RenderingMode">
+     <item>
+      <property name="text">
+       <string>Standard Rendering</string>
+      </property>
+     </item>
+     <item>
+      <property name="text">
+       <string>Enable Multisampling (Antialiasing)</string>
+      </property>
+     </item>
+     <item>
+      <property name="text">
+       <string>Enable Depth Peeling</string>
+      </property>
+     </item>
+    </widget>
+   </item>
+   <item row="15" column="0">
+    <widget class="QLabel" name="label_8">
+     <property name="toolTip">
+      <string>The small text on the button left of each renderwindow.</string>
      </property>
      <property name="text">
-      <string>Use PACS like mouse interaction (select left mouse button action)</string>
-     </property>
-     <property name="tristate">
-      <bool>false</bool>
+      <string>Corner annotation</string>
      </property>
     </widget>
    </item>
-   <item row="11" column="2">
-    <widget class="QPushButton" name="m_ColorButton2">
+   <item row="16" column="0">
+    <widget class="QPushButton" name="m_ResetButton">
      <property name="text">
-      <string/>
+      <string>Reset preferences</string>
      </property>
     </widget>
    </item>
-   <item row="3" column="0" colspan="3">
+   <item row="4" column="0" colspan="3">
     <widget class="Line" name="line">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
    </item>
-   <item row="6" column="0">
-    <widget class="QLabel" name="label_5">
-     <property name="text">
-      <string>Rendering Mode*</string>
-     </property>
-    </widget>
-   </item>
-   <item row="14" column="1" colspan="2">
-    <widget class="QLineEdit" name="m_RenderWindowDecorationText"/>
-   </item>
-   <item row="11" column="1">
-    <widget class="QPushButton" name="m_ColorButton1">
+   <item row="12" column="2">
+    <widget class="QPushButton" name="m_ColorButton2">
      <property name="text">
       <string/>
      </property>
@@ -218,6 +214,20 @@
      </property>
     </widget>
    </item>
+   <item row="10" column="1">
+    <widget class="QSpinBox" name="m_CrosshairGapSize">
+     <property name="value">
+      <number>32</number>
+     </property>
+    </widget>
+   </item>
+   <item row="3" column="0">
+    <widget class="QCheckBox" name="m_ShowDepartmentLogo">
+     <property name="text">
+      <string>Show Department Logo</string>
+     </property>
+    </widget>
+   </item>
   </layout>
  </widget>
  <resources/>
